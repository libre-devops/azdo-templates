parameters:
  - name: terraformCodeLocation
    default: "terraform"
    displayName: "Location of the Terraform code"
    type: string

  - name: serviceConnection
    displayName: "Service Connection"
    type: string

  - name: backendUseAzureAdAuth
    displayName: "Use Azure AD for Authentication"
    type: string
    default: "true"

  - name: backendResourceGroup
    displayName: "Backend Resource Group Name"
    type: string

  - name: backendStorageAccount
    displayName: "Backend Storage Account Name"
    type: string

  - name: backendContainerName
    displayName: "Backend Container Name"
    type: string

  - name: storageUseAzureAD
    displayName: "Use Azure AD for Storage Authentication"
    type: string
    default: "true"

  - name: useOidcAuth
    displayName: "Use OIDC for Authentication"
    type: string
    default: "false"

  - name: useManagedIdentityAuth
    displayName: "Use Managed Identity for Authentication"
    type: string
    default: "true"

  - name: debugMode
    displayName: "Whether debug mode should be enabled within the script"
    type: boolean
    default: false

steps:
  - task: AzureCLI@2
    displayName: 'Authenticate to Azure & set terraform environment variables'
    name: 'AzureLogin'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Set variables for the current job environment
        Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
        Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
        Write-Host "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query id -o tsv)"
        
        # Set variables as outputs for other jobs
        Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]$env:servicePrincipalId"
        Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$env:tenantId"
        Write-Host "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(az account show --query id -o tsv)"
      workingDirectory: ${{ parameters.terraformCodeLocation }}
      addSpnToEnvironment: true
    enabled: true

  - pwsh: |
        if ('${{ parameters.useOidcAuth }}' -eq 'false') {
            Write-Host "##vso[task.setvariable variable=ARM_USE_OIDC]false"
            Write-Host "##vso[task.setvariable variable=ARM_OIDC_TOKEN]null"
        } else {
            Write-Host "##vso[task.setvariable variable=ARM_USE_OIDC]${{ parameters.useOidcAuth }}"
            Write-Host "##vso[task.setvariable variable=ARM_OIDC_TOKEN]$(ARM_OIDC_TOKEN)"
        }

        if ('${{ parameters.useManagedIdentityAuth }}' -eq 'false') {
            Write-Host "##vso[task.setvariable variable=ARM_USE_MSI]false"
        } else {
            Write-Host "##vso[task.setvariable variable=ARM_USE_MSI]${{ parameters.useManagedIdentityAuth }}"
        }
    displayName: 'Set Conditional Variables - Terraform init'
    name: 'InitSetConditionalVariables'
    enabled: true

  - pwsh: |
      $collectionUri = "$(System.CollectionUri)"
      $orgName = ($collectionUri -split "/")[-1]
      git config --global url."https://$env:SYSTEM_ACCESSTOKEN@dev.azure.com".insteadOf "https://$orgName@dev.azure.com"
    displayName: 'Set extra header for terraform modules clone'
    name: 'SetExtraHeader'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    continueOnError: false
    enabled: true

  - pwsh: |
        terraform init `
        -backend-config="resource_group_name=$(TF_VAR_ARM_BACKEND_STORAGE_RG_NAME)" `
        -backend-config="storage_account_name=$(TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT)" `
        -backend-config="container_name=$(TF_VAR_ARM_BACKEND_CONTAINER_NAME)"
    displayName: 'Terraform init'
    name: 'TerraformInit'
    workingDirectory: ${{ parameters.terraformCodeLocation }}
    continueOnError: false
    enabled: true
    env:
      TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT: ${{ parameters.backendStorageAccount }}
      TF_VAR_ARM_BACKEND_CONTAINER_NAME: ${{ parameters.backendContainerName }}
      TF_VAR_ARM_BACLEND_STORAGE_RG_NAME: ${{ parameters.backendResourceGroup }}
      ARM_STORAGE_USE_AZUREAD: ${{ parameters.storageUseAzureAD }}
      ARM_USE_OIDC: $(ARM_USE_OIDC)
      ARM_USE_AZUREAD: ${{ parameters.backendUseAzureAdAuth }}
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
      ARM_USE_MSI: $(ARM_USE_MSI)
