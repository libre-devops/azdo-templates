name: $(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

trigger: none

parameters:
  - name: env
    default: dev
    displayName: "Environment Name"
    type: string
    values:
      - dev
      - uat
      - prod

  - name: terraformCodeLocation
    default: "$(Build.SourcesDirectory)/terraform"
    displayName: "Location of the Terraform code"
    type: string

  - name: poolName
    displayName: "Pool Name"
    type: string
    values:
      - "Default"
      - "Azure Pipeline"
      - "lbd-linux-pool"
    default: "Default"

  - name: terraformVersion
    displayName: "Terraform Version"
    type: string
    values:
      - latest
      - 1.9.x
      - 1.8.x
    default: latest

  - name: serviceConnection
    displayName: Service Connection
    type: string
    default: "id-lbd-uks-prd-mgmt-01"
    values:
      - "ldo-azdo-fed-tst-01"
      - "id-lbd-uks-prd-mgmt-01"
      
  - name: variableGroup
    displayName: "Variable Group"
    type: string
    default: "terraform-test-vg"

variables:
  - group: ${{ parameters.variableGroup }}

resources:
  repositories:
  - repository: templates
    type: git
    name: libredevops/templates
    ref: main

stages:
  - stage: "${{ parameters.env }}"
    displayName: "${{ parameters.env }} Stage"
    jobs:
      - job: TerraformPlanDestroy
        displayName: "Terraform Init and Plan Destroy"
        pool: ${{ parameters.poolName }}
        steps:
          - checkout: self

          - template: managed-identity-tf/terraform-install.yml@templates
            parameters:
              terraformVersion: ${{ parameters.terraformVersion }}

          - template: managed-identity-tf/terraform-init.yml@templates
            parameters:
              terraformCodeLocation: ${{ parameters.terraformCodeLocation }}
              serviceConnection: ${{ parameters.serviceConnection }}
              backendResourceGroup: $(TF_VAR_ARM_BACKEND_STORAGE_RG_NAME)
              backendStorageAccount: $(TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT)
              backendContainerName: $(TF_VAR_ARM_BACKEND_CONTAINER_NAME)

          - template: managed-identity-tf/terraform-plan-destroy.yml@templates
            parameters:
              terraformCodeLocation: ${{ parameters.terraformCodeLocation }}
              subscriptionId: $[ dependencies.TerraformPlanDestroy.outputs['AzureLogin.ARM_SUBSCRIPTION_ID'] ]
              clientId: $[ dependencies.TerraformPlanDestroy.outputs['AzureLogin.ARM_CLIENT_ID'] ]
              tenantId: $[ dependencies.TerraformPlanDestroy.outputs['AzureLogin.ARM_TENANT_ID'] ]

      - job: ManualApproval
        displayName: "Manual Approval"
        dependsOn: TerraformPlanDestroy
        pool: server
        steps:
          - task: ManualValidation@0
            inputs:
              notifyUsers: 'craigthackerx@gmail.com'
              instructions: 'Review the Terraform plan before applying.'
              timeoutInMinutes: '60'
              onTimeout: 'reject'
            displayName: 'Manual Approval to Apply Terraform Changes'

      - job: TerraformDestroy
        displayName: "Terraform Init, Plan Destroy, and Destroy"
        dependsOn: [TerraformPlanDestroy, ManualApproval]
        pool: ${{ parameters.poolName }}
        steps:
          - checkout: self

          - template: managed-identity-tf/terraform-install.yml@templates
            parameters:
              terraformVersion: ${{ parameters.terraformVersion }}

          - template: managed-identity-tf/terraform-init.yml@templates
            parameters:
              terraformCodeLocation: ${{ parameters.terraformCodeLocation }}
              serviceConnection: ${{ parameters.serviceConnection }}
              backendResourceGroup: $(TF_VAR_ARM_BACKEND_STORAGE_RG_NAME)
              backendStorageAccount: $(TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT)
              backendContainerName: $(TF_VAR_ARM_BACKEND_CONTAINER_NAME)

          - template: managed-identity-tf/terraform-plan-destroy.yml@templates
            parameters:
              terraformCodeLocation: ${{ parameters.terraformCodeLocation }}
              subscriptionId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_SUBSCRIPTION_ID'] ]
              clientId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_CLIENT_ID'] ]
              tenantId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_TENANT_ID'] ]

          - template: managed-identity-tf/terraform-destroy.yml@templates
            parameters:
              terraformCodeLocation: ${{ parameters.terraformCodeLocation }}
              subscriptionId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_SUBSCRIPTION_ID'] ]
              clientId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_CLIENT_ID'] ]
              tenantId: $[ dependencies.TerraformDestroy.outputs['AzureLogin.ARM_TENANT_ID'] ]